C51 COMPILER V9.54   INA219                                                                07/23/2021 20:27:41 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE INA219
OBJECT MODULE PLACED IN .\Objects\INA219.obj
COMPILER INVOKED BY: G:\keil_v5cm\C51\BIN\C51.EXE Workspace\Code\INA219.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Workspace;.\
                    -Workspace\Include) DEBUG OBJECTEXTEND PRINT(.\Listings\INA219.lst) TABS(2) OBJECT(.\Objects\INA219.obj)

line level    source

   1          #include "INA219.H"
   2          #include "oled.h"
   3          #include "stdio.h"
   4          
   5          void INA219_GpioInit(void)
   6          {   
   7   1        GPIOX_TypeDef GPIOX;
   8   1        GPIOPINX_TypeDef GPIOPINX;
   9   1        GPIO_InitTypeDef GPIO_Init;
  10   1      
  11   1      //  OLED_SDA,P33,开漏输出,数字信号输入使能,上拉关闭,施密特使能,转换速度一般,驱动电流控制弱
  12   1        GPIOX = P_3;
  13   1        GPIOPINX = PIN3;
  14   1        
  15   1        GPIO_Init.gpio_mode = GPIO_PM_OD;       //----   端口
  16   1        GPIO_Init.gpio_pxpu = GPIO_PU_DISEN;    //----   端口上拉电阻控制寄存器
  17   1        GPIO_Init.gpio_pxncs = GPIO_PNCS_EN;    //----   端口施密特触发控制寄存器
  18   1        GPIO_Init.gpio_pxsr = GPIO_PSR_SMALL;   //----   端口电平转换速度控制寄存器
  19   1        GPIO_Init.gpio_pxdr = GPIO_PDR_SMALL;   //----   端口驱动电流控制寄存器
  20   1        GPIO_Init.gpio_pxie = GPIO_PIE_EN;      //----   端口数字信号输入使能控制寄存器 
  21   1        
  22   1        IoBuild(GPIOX, GPIOPINX,GPIO_Init);
  23   1        
  24   1      //  OLED_SCL,P32,开漏输出,数字信号输入使能,上拉关闭,施密特使能,转换速度一般,驱动电流控制弱
  25   1        GPIOX = P_3;
  26   1        GPIOPINX = PIN2;
  27   1        
  28   1        GPIO_Init.gpio_mode = GPIO_PM_OD;       //----   推挽输出
  29   1        GPIO_Init.gpio_pxpu = GPIO_PU_DISEN;    //----   端口上拉电阻控制寄存器
  30   1        GPIO_Init.gpio_pxncs = GPIO_PNCS_EN;    //----   端口施密特触发控制寄存器
  31   1        GPIO_Init.gpio_pxsr = GPIO_PSR_SMALL;   //----   端口电平转换速度控制寄存器
  32   1        GPIO_Init.gpio_pxdr = GPIO_PDR_SMALL;   //----   端口驱动电流控制寄存器
  33   1        GPIO_Init.gpio_pxie = GPIO_PIE_EN;      //----   端口数字信号输入使能控制寄存器 
  34   1        
  35   1        IoBuild(GPIOX, GPIOPINX,GPIO_Init); 
  36   1        
  37   1        INA219_SCL = 1;
  38   1        INA219_SDA = 1;
  39   1      }
  40          
  41          void Delay1ms()   //@24.000MHz
  42          {
  43   1        unsigned char i, j;
  44   1      
  45   1        i = 24;
  46   1        j = 85;
  47   1        do
  48   1        {
  49   2          while (--j);
  50   2        } while (--i);
  51   1      }
  52          
  53          //执行完成寄存器 I2CMSCR中 MSCMD 命令后产生中断信号
  54          void Wait()
C51 COMPILER V9.54   INA219                                                                07/23/2021 20:27:41 PAGE 2   

  55          {
  56   1        while (!(I2CMSST & 0x40));
  57   1        I2CMSST &= ~0x40;
  58   1      }
  59          
  60          //起始命令
  61          void IIC_Start()
  62          {
  63   1        I2CMSCR = 0x01; 
  64   1        Wait();
  65   1      }
  66          
  67          //停止命令
  68          void IIC_Stop()
  69          {
  70   1        I2CMSCR = 0x06; 
  71   1        Wait();
  72   1      }
  73          
  74          //接收从机应答信号,0应答,1非应答
  75          u8 IIC_SlaveRespond()
  76          {
  77   1        u8 receive_flag = 1;
  78   1        I2CMSCR = 0x03;
  79   1        Wait();
  80   1        receive_flag = (I2CMSST & 0x02) >> 1;
  81   1        return receive_flag;
  82   1      }
  83          
  84          //主机应答信号,0应答,1非应答
  85          void IIC_MasterNotRespond()
  86          {
  87   1        I2CMSST |= 0x01;
  88   1        I2CMSCR = 0x05;
  89   1        Wait();
  90   1      }
  91          
  92          //主机应答信号,0应答,1非应答
  93          void IIC_MasterRespond()
  94          {
  95   1        I2CMSST &= 0xfe;
  96   1        I2CMSCR = 0x05;
  97   1        Wait();
  98   1      }
  99          
 100          //主机发送数据
 101          void IIC_MasterSendByte(u8 send_data)
 102          {
 103   1        I2CTXD = send_data;
 104   1        I2CMSCR = 0x02;
 105   1        Wait();
 106   1      }
 107          
 108          
 109          //主机接受数据
 110          u8 IIC_MasterReceiveByte()
 111          {
 112   1        u8 receive_data = 0;
 113   1        //写此命令后， I2C 总线控制器会在 SCL 管脚上产生 8 个时钟，并将从 SDA 端口上读取的数据
 114   1        //依次左移到 I2CRXD 寄存器（先接收高位数据）
 115   1        I2CMSCR = 0x04;
 116   1        Wait();
C51 COMPILER V9.54   INA219                                                                07/23/2021 20:27:41 PAGE 3   

 117   1        receive_data = I2CRXD;
 118   1        return receive_data;
 119   1      }
 120          
 121          
 122          //IIC发送byte
 123          void INA219_SendByte(u16 iic_data,u8 slave_address,u8 slave_reg_address)
 124          {
 125   1        u8 data_temp[2] = {0};
 126   1        data_temp[0] = iic_data >> 8;
 127   1        data_temp[1] = iic_data & 0x00ff;
 128   1        
 129   1        //判断总线是否处于忙
 130   1      
 131   1        iic_Sendfailure:
 132   1        P_SW2 = 0x80;       //允许访问xfr寄存器
 133   1        I2CCFG = 0xe0;      //允许IIC功能,主机模式,速率176Khz
 134   1        I2CMSCR = 0x00;   //不允许主机模式中断 
 135   1        while((I2CMSST & 0x80) == 0x80)  goto iic_Sendfailure; //判断是否处于空闲状态
 136   1        
 137   1        //起始命令
 138   1        
 139   1        IIC_Start();
 140   1        
 141   1        //发送从机地址
 142   1        IIC_MasterSendByte(slave_address & 0xfe);
 143   1        while(IIC_SlaveRespond() != 0)  goto iic_Sendfailure;   //从机应答
 144   1      
 145   1      
 146   1        //发送从机寄存器地址
 147   1        IIC_MasterSendByte(slave_reg_address);
 148   1        while(IIC_SlaveRespond() != 0)  goto iic_Sendfailure;     //从机应答
 149   1      
 150   1        
 151   1        //发送数据
 152   1        IIC_MasterSendByte(data_temp[0]);
 153   1        while(IIC_SlaveRespond() != 0)  goto iic_Sendfailure;     //从机应答
 154   1      
 155   1        
 156   1        IIC_MasterSendByte(data_temp[1]);
 157   1        while(IIC_SlaveRespond() != 0)  goto iic_Sendfailure;     //从机应答
 158   1      
 159   1        //停止命令
 160   1        IIC_Stop();
 161   1        P_SW2 = 0x00;       //关闭访问xfr寄存器
 162   1      
 163   1      }
 164          
 165          //IIC接收byte
 166          u16 INA219_ReceiveByte(u8 slave_address,u8 slave_reg_address)
 167          {
 168   1        char buff[10] = {0};
 169   1        int data_temp[2] = {0};
 170   1        u16 receive_data = 0;
 171   1        int kk = 0;
 172   1        
 173   1        //判断总线是否处于忙
 174   1      
 175   1        iic_Recfailure:
 176   1        P_SW2 = 0x80;       //允许访问xfr寄存器
 177   1        I2CCFG = 0xe0;      //允许IIC功能,主机模式,速率176Khz
 178   1        I2CMSCR = 0x00;     //不允许主机模式中断 
C51 COMPILER V9.54   INA219                                                                07/23/2021 20:27:41 PAGE 4   

 179   1        while((I2CMSST & 0x80) == 0x80)  goto iic_Recfailure; //判断是否处于空闲状态
 180   1        
 181   1        //起始命令
 182   1        
 183   1        IIC_Start();
 184   1        
 185   1        //发送从机地址+写
 186   1      
 187   1        IIC_MasterSendByte(slave_address & 0xfe);
 188   1        while(IIC_SlaveRespond() != 0)  goto iic_Recfailure;    //从机应答
 189   1      
 190   1      
 191   1        //发送从机寄存器地址
 192   1      
 193   1        IIC_MasterSendByte(slave_reg_address);
 194   1        while(IIC_SlaveRespond() != 0)  goto iic_Recfailure;      //从机应答
 195   1      
 196   1        //起始命令
 197   1        IIC_Start();
 198   1        
 199   1        //发送从机地址+读
 200   1        IIC_MasterSendByte(slave_address |0x01);
 201   1        while(IIC_SlaveRespond() != 0)  goto iic_Recfailure;    //从机应答
 202   1      
 203   1      
 204   1        //发送从机寄存器地址
 205   1      
 206   1        data_temp[0] = IIC_MasterReceiveByte();
 207   1        IIC_MasterRespond();
 208   1        
 209   1        data_temp[1] = IIC_MasterReceiveByte();
 210   1        IIC_MasterNotRespond();
 211   1        
 212   1        //停止命令
 213   1        IIC_Stop();
 214   1        P_SW2 = 0x00;       //关闭访问xfr寄存器
 215   1        receive_data = (data_temp[0] << 8 | data_temp[1]);
 216   1        return receive_data;
 217   1      }
 218          
 219          
 220          
 221          
 222          
 223          
 224          
 225          
 226          
 227          
 228          
 229          
 230          
 231          
 232          
 233          
 234          
 235          
 236          
 237          
 238          
 239          
 240          
C51 COMPILER V9.54   INA219                                                                07/23/2021 20:27:41 PAGE 5   

 241          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    508    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      30
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
